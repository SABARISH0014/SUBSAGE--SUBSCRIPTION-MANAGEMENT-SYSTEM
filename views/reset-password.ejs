
<!-- Reset Password Page (views/reset-password.ejs) -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <link rel="stylesheet" href="/css/reset-password.css">
    <link rel="icon" type="image/png" sizes="256x256" href="/images/website icon.ico">
    <script src="https://www.google.com/recaptcha/api.js"></script>
</head>
<header>
    <h1>Reset Your Password</h1>
    <a href="/login">
        <img src="/images/home.png" alt="Home Logo">
    </a>
    <button id="theme-toggle" aria-label="Toggle Theme">
        <img id="theme-icon" src="/images/moon.png" alt="Toggle Theme"> <!-- Moon icon for dark mode -->
    </button>
</header>
<body>
    <main class="container">
        <form action="/reset-password.ejs" method="POST">
            <input type="hidden" name="token" value="<%= token %>">
            <input type="hidden" name="email" value="<%= email %>"> <!-- Hidden email input field -->
            <input type="password" name="password" placeholder="New Password" required>
            
            <!-- reCAPTCHA widget -->
            <div class="g-recaptcha" data-sitekey="<%= process.env.RECAPTCHA_SITE_KEY %>"></div><br>
            
            <% if (message) { %>
                <p class="error-message"><%= message %></p>
            <% } %>
        
            <button type="submit">Update Password</button>
        </form>
        
</main>
<footer>
    <p>&copy; 2025 SubSage. All rights reserved.</p>
</footer>
<script>
    document.addEventListener('DOMContentLoaded', function () {
setTimeout(() => {
let messageElements = document.getElementsByClassName('error-message');
if (messageElements.length > 0) {  // Ensure an element exists
  let messageElement = messageElements[0]; // Get the first element
  messageElement.style.opacity = '0'; // Fade out
  setTimeout(() => {
    messageElement.style.display = 'none'; // Hide after fading out
  }, 500); // Match this delay to CSS transition duration
}
}, 3000); // Wait for 3 seconds before hiding
});

  </script>
<script>
    // Theme toggle functionality
    const themeToggleBtn = document.getElementById('theme-toggle');
    const themeIcon = document.getElementById('theme-icon');
    const body = document.body;
    
    // Set the initial theme to light mode (default with sun icon)
    if (!localStorage.getItem('theme')) {
        localStorage.setItem('theme', 'light'); // Default to light mode
    }
    
    // Apply the stored theme preference
    if (localStorage.getItem('theme') === 'dark') {
        body.classList.add('dark-mode');
        themeIcon.src = '/images/moon.png'; // Moon icon for dark mode (now moon for dark)
        themeIcon.alt = 'Switch to light mode';
    } else {
        body.classList.remove('dark-mode');
        themeIcon.src = '/images/sun.png'; // Sun icon for light mode (now sun for light)
        themeIcon.alt = 'Switch to dark mode';
    }
    
    // Toggle theme on button click
    themeToggleBtn.addEventListener('click', () => {
        body.classList.toggle('dark-mode');
        if (body.classList.contains('dark-mode')) {
            themeIcon.src = '/images/moon.png'; // Moon icon for dark mode (now moon for dark)
            themeIcon.alt = 'Switch to light mode';
            localStorage.setItem('theme', 'dark'); // Save dark mode preference
        } else {
            themeIcon.src = '/images/sun.png'; // Sun icon for light mode (now sun for light)
            themeIcon.alt = 'Switch to dark mode';
            localStorage.setItem('theme', 'light'); // Save light mode preference
        }
    });
    
        </script>
</body>
</html>
